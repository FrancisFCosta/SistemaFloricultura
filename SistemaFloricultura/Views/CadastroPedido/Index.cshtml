@using Util
@using SistemaFloricultura.Models
@using System.Globalization
@model PedidoModel
@{
    ViewBag.Title = "CadastroPedido";
}

<div class="jumbotron jumbotron-body">
    <h2>Solicitação de Pedido</h2>
    <div class="container">
        <section id="cadastroPedidoForm">
            @using (Html.BeginForm("SalvarPedido", "CadastroPedido", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(m => m.Id, new { @class = "form-control" })

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Resumo, new { @class = "col-md-2 control-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.Resumo, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.StatusPedido, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.StatusPedido, new { @class = "form-control", @onkeyup = "moeda(this);", @maxlength = "10" })
                            </div>
                        </div>
                    </div>
                </div>

                <br />

                <div class="container">

                    @if (Model.LinhasPedido != null && Model.LinhasPedido.Any())
                    {

                        <table class="table" border="0">
                            <thead class="thead-inverse">
                                <tr>
                                    <th width="40%" colspan="2">Produto</th>
                                    <th width="10%" style="text-align: center;">Val.Unit.</th>
                                    <th width="6%%" style="text-align: center;">Qtde</th>
                                    <th width="10%" style="text-align: center;">Val.Total</th>
                                    <th width="6%"></th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var linhaPedido in Model.LinhasPedido)
                                {
                                    <tr valign="middle">
                                        <td>
                                            @if (linhaPedido.Produto.ImagemPrincipal != null)
                                            {
                                                <img id="miniaturaImagemProduto" src=@String.Concat("data:image/png;base64," + Convert.ToBase64String(linhaPedido.Produto.ImagemPrincipal.ImagemBytes))>
                                            }
                                            else
                                            {
                                                <img id="miniaturaImagemProduto" src="~/fonts/insiraumaimagem.jpg" />
                                            }
                                        </td>
                                        <td>@linhaPedido.Produto.Nome</td>
                                        <td><input class="valorUnitLinha" type="hidden" value="@linhaPedido.Produto.PrecoVenda"> @string.Format(CultureInfo.GetCultureInfo("pt-BR"), "{0:C}", linhaPedido.Produto.PrecoVenda)</td>
                                        <td>
                                            <input name="quant" size="1" type="number" value="@linhaPedido.Quantidade" maxlength="2" class="form-control qtdprod" />
                                        </td>
                                        <td class="valorTotalLinha">@string.Format(CultureInfo.GetCultureInfo("pt-BR"), "{0:C}", (linhaPedido.Produto.PrecoVenda * linhaPedido.Quantidade))</td>
                                        <td><button type="button" class="glyphicon glyphicon-trash excluir-linha-pedido" value="@linhaPedido.Produto.Id"></button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <h4>Nenhum produto adicionado ao carrinho.</h4>
                    }
                </div>

                <br />
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Observacao, new { @class = "col-md-2 control-label" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(m => m.Observacao, new { @class = "form-control", @rows = 3 })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.DataAlteracao, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.DataAlteracao, new { @class = "form-control", @onkeyup = "moeda(this);", @maxlength = "10" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-10 col-md-2">
                        <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-floppy-disk" /> Salvar</button>
                    </div>
                </div>
            }
        </section>
    </div>
</div>

<script>
    var urlExcluirProduto = '@Url.Action("ExcluirItem", "CadastroPedido")';

    $(document).ready(function () {
        $('.qtdprod').on('change', function () {
            var quantidade = parseInt($(this).val());
            var valorUnitario = parseFloat($(this).parent().parent().find('.valorUnitLinha').val());
            var valorTotal = (quantidade * valorUnitario);
            $(this).parent().parent().find('.valorTotalLinha').text('R$ ' + valorTotal.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,")).toString();
        });

        $('.qtdprod').on('blur', function () {
            //todo: criar onblur atualizando valor do produto no carrinho;
        });

        $('.excluir-linha-pedido').on('click', function () {
            $.ajax({
                url: urlExcluirProduto,
                type: 'post',
                data: { idProduto: $(this).val() },
                beforeSend: function () { }
            })
       .done(function (resultado) {
           if (resultado != null) {
               if (resultado.sucesso === true) {
                   jbkrAlert.sucesso('Sucesso', resultado.mensagem, true);
               }
               else {
                   jbkrAlert.erro('Erro', resultado.mensagem, false);
               }
           }
       })
       .fail(function (jqXHR, textStatus, msg) {
           bkrAlert.erro(msg);
       });
        });
    });

</script>
